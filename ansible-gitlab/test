#!/bin/bash

# test: Test debops.gitlab
# Copyright (C) 2014 Nick Janetakis <nick.janetakis@gmail.com>
# Part of the DebOps project - http://debops.org/


. "${ROLESPEC_LIB}/main"
. "${ROLESPEC_TEST}/../defaults.conf"

echo "Test the documentation before all environment changes"
assert_docs

echo "Clean up the environment"
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
unset GOROOT GOTOOLDIR rvm_bin_path GEM_HOME IRBRC MY_RUBY_HOME rvm_autoupdate_flag rvm_path RACK_ENV rvm_prefix rvm_version RAILS_ENV GEM_PATH RUBY_VERSION rvm_silence_path_mismatch_check_flag

# Purge redis for a clean slate
stop redis-server
purge redis-server
sudo rm -rf /etc/redis

# Purge MySQL for a clean slate
stop mysql
purge ${ROLESPEC_MYSQL_LIBS}
sudo rm -rf /etc/mysql /var/lib/mysql

stop postgresql
purge ${ROLESPEC_POSTGRESQL_LIBS}
sudo rm -rf /var/lib/postgresql

fix_precise_issues

# Add Ruby 2.1 PPA and Golang PPA
sudo apt-get -yq install python-software-properties
sudo apt-add-repository -y ppa:brightbox/ruby-ng
#sudo add-apt-repository -y ppa:gophers/archive
#sudo add-apt-repository -y ppa:ubuntu-lxc/lxd-stable
echo "deb http://us.archive.ubuntu.com/ubuntu/ xenial main restricted universe multiverse" | sudo tee /etc/apt/sources.list.d/xenial.list
sudo apt-get -yq update

sudo apt-get -yq install golang golang-go
echo "golang version"
apt-cache policy golang
apt-cache policy golang-go

sudo rm -rf /etc/apt/sources.list.d/xenial.list
sudo apt-get -yq udpate
sudo apt-get -yq install ruby2.1 ruby2.1-dev

#echo "Show current values"
#echo "GOROOT=${GOROOT}"
#echo "GOTOOLDIR=${GOTOOLDIR}"
#
#export GOROOT="/usr/lib/go"
#export GOTOOLDIR="/usr/lib/go/pkg/tool/linux_amd64"
#
#echo "Show new values"
#echo "GOROOT=${GOROOT}"
#echo "GOTOOLDIR=${GOTOOLDIR}"

sudo apt-get install tree

sudo gem install bundler:1.14.6

install_ansible ${test_ansible_version}
ansible_plugins


ansible-galaxy -f install debops.ferm \
                          debops.apt_preferences \
                          debops.etc_services \
                          debops.golang \
                          debops.redis \
                          debops.ruby \
                          debops.nodejs \
                          debops.postgresql \
                          debops.nginx \
                          debops.postgresql_server


assert_playbook_check_runs

#echo "Try and build gitlab-workhorse manually"
#echo "pwd: $(pwd)"
#git clone --branch v1.3.0 https://gitlab.com/gitlab-org/gitlab-workhorse.git
#
#cd gitlab-workhorse
#
#echo "Before make"
#apt-cache policy make
#make --version
#ls -l
#
#echo "Show environment"
#env
#echo "Run make"
#make
#
#
assert_playbook_idempotent_long


# GitLab needs some time to start up
sleep 15


echo "Check contents of the webpage"
curl http://localhost.localdomain/users/sign_in

echo "Check Go version"
go version

#echo "Debug, redis facts"
#sudo /etc/ansible/facts.d/redis.fact

#echo "Debug, check redis password"
#echo "Randomized Redis password: '$(sudo redis-password)'"

#echo "Debug, check gitlab redis config"
#sudo cat /var/local/git/gitlab/config/resque.yml

echo "Run gitlab:check"
cd ~git/gitlab && sudo -u git bundle exec rake gitlab:check SANITIZE=true RAILS_ENV=production

assert_url "http://localhost.localdomain/users/sign_in" 302

# Docs are tested at the beginning before all inventory changes
echo "Check documentation status at the start"
